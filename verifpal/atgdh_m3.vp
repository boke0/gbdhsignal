attacker[active]

principal Alice[
    knows private ka0, c0
    gka0 = G^ka0
]

principal Bob[
    knows private kb0, c0
    gkb0 = G^kb0
]

principal Charlie[
    knows private kc0, c0
    gkc0 = G^kc0
]

principal Dave[
    knows private kd0, c0
    gkd0 = G^kd0
]

principal Ellen[
    knows private ke0, c0
    gke0 = G^ke0
]


Bob -> Alice: [gkb0]
Charlie -> Alice: [gkc0]
Dave -> Alice: [gkd0]
Ellen -> Alice: [gke0]
Alice -> Bob: [gka0]
Charlie -> Bob: [gkc0]
Dave -> Bob: [gkd0]
Ellen -> Bob: [gke0]
Alice -> Charlie: [gka0]
Bob -> Charlie: [gkb0]
Dave -> Charlie: [gkd0]
Ellen -> Charlie: [gke0]
Alice -> Dave: [gka0]
Bob -> Dave: [gkb0]
Charlie -> Dave: [gkc0]
Ellen -> Dave: [gke0]
Alice -> Ellen: [gka0]
Bob -> Ellen: [gkb0]
Charlie -> Ellen: [gkc0]
Dave -> Ellen: [gkd0]

principal Alice[
    generates ka1, m1
    gka1 = G^ka1
    akab1 = HASH(gkb0^ka1)
    akabc1 = HASH(gkc0^akab1)
    akabcd1 = HASH(gkd0^akabc1)
    akabcde1 = HASH(gke0^akabcd1)

    gkab1 = G^akab1
    gkabc1 = G^akabc1
    gkabcd1 = G^akabcd1
    e1 = AEAD_ENC(akabcde1, m1, c0)
]

Alice -> Bob: [gka1], [gkab1], [gkabc1], [gkabcd1], e1
Alice -> Charlie: [gka1], [gkab1], [gkabc1], [gkabcd1], e1
Alice -> Dave: [gka1], [gkab1], [gkabc1], [gkabcd1], e1
Alice -> Ellen: [gka1], [gkab1], [gkabc1], [gkabcd1], e1

principal Bob[
    bkab1 = HASH(gka1^kb0)
    bkabc1 = HASH(gkc0^bkab1)
    bkabcd1 = HASH(gkd0^bkabc1)
    bkabcde1 = HASH(gke0^bkabcd1)
    bm1 = AEAD_DEC(bkabcde1, e1, c0)?
]

principal Charlie[
    ckabc1 = HASH(gkab1^kc0)
    ckabcd1 = HASH(gkd0^ckabc1)
    ckabcde1 = HASH(gke0^ckabcd1)
    cm1 = AEAD_DEC(ckabcde1, e1, c0)?
]

principal Dave[
    dkabcd1 = HASH(gkabc1^kd0)
    dkabcde1 = HASH(gke0^dkabcd1)
    dm1 = AEAD_DEC(dkabcde1, e1, c0)?
]

principal Ellen[
    ekabcde1 = HASH(gkabcd1^ke0)
    em1 = AEAD_DEC(ekabcde1, e1, c0)?
]

principal Charlie[
    generates kc2, m2
    gkc2 = G^kc2
    ckcd2 = HASH(gkd0^kc2)
    ckabcd2 = HASH(gkab1^ckcd2)
    ckabcde2 = HASH(gke0^ckabcd2)

    gkcd2 = G^ckcd2
    gkabcd2 = G^ckabcd2
    e2 = AEAD_ENC(ckabcde2, m2, c0)
]

Charlie -> Alice: [gkc2], [gkcd2], [gkabcd2], e2
Charlie -> Bob: [gkc2], [gkcd2], [gkabcd2], e2
Charlie -> Dave: [gkc2], [gkcd2], [gkabcd2], e2
Charlie -> Ellen: [gkc2], [gkcd2], [gkabcd2], e2

principal Alice[
    akabcd2 = HASH(gkcd2^akab1)
    akabcde2 = HASH(gke0^akabcd2)
    am2 = AEAD_DEC(akabcde2, e2, c0)?
]

principal Bob[
    bkabcd2 = HASH(gkcd2^bkab1)
    bkabcde2 = HASH(gke0^bkabcd2)
    bm2 = AEAD_DEC(bkabcde2, e2, c0)?
]

principal Dave[
    dkcd2 = HASH(gkc2^kd0)
    dkabcd2 = HASH(gkab1^dkcd2)
    dkabcde2 = HASH(gke0^dkabcd2)
    dm2 = AEAD_DEC(dkabcde2, e2, c0)?
]

principal Ellen[
    ekabcde2 = HASH(gkabcd2^ke0)
    em2 = AEAD_DEC(ekabcde2, e2, c0)?
]

principal Ellen[
    generates ke3, m3
    gke3 = G^ke3
    ekabcde3 = HASH(gkabcd2^ke3)

    e3 = AEAD_ENC(ekabcde3, m3, c0)
]

Ellen -> Alice: [gke3], e3
Ellen -> Bob: [gke3], e3
Ellen -> Charlie: [gke3], e3
Ellen -> Dave: [gke3], e3

principal Alice[
    akabcde3 = HASH(gke3^akabcd2)
    am3 = AEAD_DEC(akabcde3, e3, c0)?
]

principal Bob[
    bkabcde3 = HASH(gke3^bkabcd2)
    bm3 = AEAD_DEC(bkabcde3, e3, c0)?
]

principal Charlie[
    ckabcde3 = HASH(gke3^ckabcd2)
    cm3 = AEAD_DEC(ckabcde3, e3, c0)?
]

principal Dave[
    dkabcde3 = HASH(gke3^dkabcd2)
    dm3 = AEAD_DEC(dkabcde3, e3, c0)?
]

queries[
    confidentiality? m1
    authentication? Alice -> Bob: e1
    authentication? Alice -> Charlie: e1
    authentication? Alice -> Dave: e1
    authentication? Alice -> Ellen: e1

    confidentiality? m2
    authentication? Charlie -> Alice: e2
    authentication? Charlie -> Bob: e2
    authentication? Charlie -> Dave: e2
    authentication? Charlie -> Ellen: e2

    confidentiality? m3
    authentication? Ellen -> Alice: e3
    authentication? Ellen -> Bob: e3
    authentication? Ellen -> Charlie: e3
    authentication? Ellen -> Dave: e3
]
